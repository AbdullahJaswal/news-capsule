version: "3.9"

services:
  nc-frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.prod
    container_name: nc-frontend
    entrypoint: /frontend/entrypoint.prod.sh
    volumes:
      - ./frontend:/frontend
      - node_modules:/frontend/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"
    networks:
      - staging
    depends_on:
      - nc-backend
  nc-backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile.prod
    container_name: nc-backend
    entrypoint: /backend/entrypoint.prod.sh
    volumes:
      - ./backend:/backend
      - static:/backend/static
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    env_file:
      - ./backend/dev.env
    networks:
      - staging
    depends_on:
      - nc-redis
  nc-redis:
    image: redis
    container_name: nc-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - redis_data:/data
    networks:
      - staging

volumes:
  static:
  redis_data:
  node_modules:


networks:
  staging:
    driver: bridge
    ipam:
      config:
        - subnet: 24.28.0.0/16
          gateway: 24.28.0.1
