version: "3.9"

services:
  # nc-frontend:
  #   build: ./frontend/
  #   container_name: nc-frontend
  #   entrypoint: /frontend/entrypoint.dev.sh
  #   volumes:
  #     - ./frontend:/frontend
  #     - node_modules:/frontend/node_modules
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - staging
  #   depends_on:
  #     - nc-backend
  nc-backend:
    build: ./backend/
    container_name: nc-backend
    entrypoint: /backend/entrypoint.dev.sh
    volumes:
      - ./backend:/backend
      - static:/backend/static
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    env_file:
      - ./backend/dev.env
    networks:
      - staging
    depends_on:
      # - nc-db
      - nc-redis
  # nc-db:
  #   image: postgres:alpine
  #   container_name: nc-db
  #   command: postgres -c 'max_connections=500' -c 'shared_buffers=500MB'
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #     - PGDATA=/tmp
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   networks:
  #     - staging
  nc-redis:
    image: redis
    container_name: nc-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - redis_data:/data
    networks:
      - staging

volumes:
  static:
  redis_data:
  node_modules:
    # db_data:


networks:
  staging:
    driver: bridge
    ipam:
      config:
        - subnet: 24.28.0.0/16
          gateway: 24.28.0.1
